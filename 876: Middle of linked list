/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
 Solution - 1 :: Two pass solution
class Solution {
    public ListNode middleNode(ListNode head) {
      ListNode first = head;
        int len =0;
        while(first!=null){
          len++;
          first = first.next;  
        }        
      for(int i=0;i<len/2;i++){
          head= head.next;
      }  
        
      return head;  
    }
}


Solution - 2 : Two pointers
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode middleNode(ListNode head) {
      ListNode slow = head;
      ListNode fast = head;
      while(fast!=null && fast.next!=null){
          slow = slow.next;
          fast = fast.next.next;
      }  
      return slow;  
    }
}
