/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int findTilt(TreeNode root) {
       int max =0;
       Stack<TreeNode> stk = new Stack<TreeNode>(); 
       stk.push(root); 
       while(root!=null && !stk.isEmpty()){
         if(root.val>=max){
           max= root.val;  
         }
         if(root.left!= null){
           stk.push(root.left);  
         } 
         if(root.right!=null){
           stk.push(root.right);  
         }  
         if(!stk.isEmpty()){
           root = stk.pop(); 
           System.out.println(root.val);  
         }  
       }
        
       return max; 
    }
}
