class Solution {
    public String intToRoman(int num) {
        HashMap<Integer, String> hash = new HashMap<Integer, String>();
        StringBuilder str = new StringBuilder();
        hash.put(1,"I");
         hash.put(4, "IV");
            hash.put(9, "IX");
        hash.put(5,"V");
        hash.put(10,"X");
         hash.put(40,"XL");
        hash.put(50, "L");
        hash.put(90, "XC");
        hash.put(100, "C");
        hash.put(500, "D");
        hash.put(1000, "M");
     
        hash.put(90, "XC");
        hash.put(400,"CD");
        hash.put(900, "CM");
      
        while(num > 0){
          int max =0;  
          String str1 = "";  
        for(Map.Entry<Integer, String> map : hash.entrySet()){
          if(map.getKey() >max && map.getKey() <= num ){
              
            max = map.getKey();
            str1 = map.getValue();
            }
          }
              System.out.println(max +"[[[]]]"+str1 ); 
            str.append(str1);
            num = num - max;
            
          } 
       
        
       return str.toString();
    }
}



class Solution {
    public String intToRoman(int num) {
        StringBuilder sb = new StringBuilder();
        while (num >= 1000) {
            num -= 1000;
            sb.append("M");
        }
        if (num >= 900) {
            num -= 900;
            sb.append("CM");
        }
        if (num >= 500) {
            num -= 500;
            sb.append("D");
        }
        if (num >= 400) {
            num -= 400;
            sb.append("CD");
        }
        while (num >= 100) {
            num -= 100;
            sb.append("C");
        }
        if (num >= 90) {
            num -= 90;
            sb.append("XC");
        }
        if (num >= 50) {
            num -= 50;
            sb.append("L");
        }
        if (num >= 40) {
            num -= 40;
            sb.append("XL");
        }
        while (num >= 10) {
            num -= 10;
            sb.append("X");
        }
        if (num == 9) {
            num -= 9;
            sb.append("IX");
        }
        if (num >= 5) {
            num -= 5;
            sb.append("V");
        }
        if (num == 4) {
            num -= 4;
            sb.append("IV");
        }
        while (num > 0) {
            num -= 1;
            sb.append("I");
        }
        return sb.toString();
    }
}
