class Solution {
 public void rotate(int[] nums, int k) {
     if(nums.length !=1){
     int rotate =0;
         int temp =0;
     if(k<nums.length){
     rotate = nums.length-k-1;
     }else{
         temp = k%nums.length;
         rotate = nums.length-temp-1;
     }    
     int[] result = new int[rotate+1];
     int count=0;
     for(int j=0;j<=rotate;j++){
        result[j]= nums[j]; 
     }
     for(int i=rotate+1;i<nums.length;i++){
        nums[count]=nums[i];
        count++; 
     } 
     for(int h=0;h<result.length;h++){
         nums[count]= result[h];
         count++;
     }}
    }
}

Time Complexity is O(N) and Space Complexity is O(N).
