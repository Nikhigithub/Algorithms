/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
     int carry =0;
     ListNode result = new ListNode(0);
     ListNode temp = result; 
        
     while(l1!=null || l2!=null){
       int val1 = l1 != null ? l1.val :0;
       int val2 = l2 != null ? l2.val :0;
       int digit = val1 + val2 + carry;
       ListNode n1 = new ListNode(digit%10);
       carry = digit/10; 
       result.next = n1;
       result = result.next;  
      if(l1!=null){ l1 = l1.next;}
      if(l2!=null){ l2 = l2.next;}  
     }
        
     if(carry!=0){
        ListNode n1 = new ListNode(carry);
         result.next = n1;
         result = result.next;
     }   
        
        
     return temp.next;   
    }
}
